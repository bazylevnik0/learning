/*temp

tech stack: XCB
concept: 
you load input characteristics ( objects, position, color) - in console
and after enter to view screen ( with grid and objects )
and also handle arrow keys events - it is must "move" matrix to left/right/up/down

matrix:
[0]   x11   x21   x31   [0]
y11   [0]   [0]   [0]   y12
y21   [0]   [0]   [0]   y22
y31   [0]   [0]   [0]   y32
[0]   x12   x22   x32   [0]
*in for example x11 we store calculated position(screen/size of grid) of grid point[x,y]
*when is needed we can put object inside with [marker(1),x,y,type,size,color]
**[x,y] real positions 

app:
-parse input 
-initiliazation
-loop:
 *two phases:
  1)handle change matrix
  2)draw

------------------------------
details:
-parse input:
 
 input:
                     //x,y,t,s,c;
    for example: ./dm "2,3,c,1,r;5,5,s,2,g;"
    where:
        x,y - relative position not real | 0 <= x <= 15 ; 0 <= y <= 9
        t - type
            c - circle
            s - square
        s - relative size not real
        c - color
            r - red
            g - green
            b - blue
        , - between arguments in object
        ; - end of object

 parse:
    split objects, maybe with "strtok" - find ";" to temp_objects array(char *)
    convert temp_objects to objects(int)
                                        t c = 2
                                        t s = 3
                                        c r = 1
                                        c g = 2
                                        c b = 3
                                                also with "strtok" - find ","

 initialization:
    fill matrix(int *) with [0]
    prepare X contex & (get size of screen, in screen)
    calculate and fill all matrix [x,y]
    calculte  and fill objects in matrix [x,y,t,c,s]

 loop:
    -draw:
        x:
            go through up and connect up and down
        y:            
            go through left and connect left and right
        objects:
            go through all(exlude up and left) and draw objects(it's loop(iterator = size) of silhouettes for full shape)
    -handle change matrix:
        go through all and add k(koefficient of moving)
        check borders and shift
        x :  
            check if first element in out of screen then 
                                                        if need
                                                            copy last column to temp_column(int *)
                                                            shift all matrix 
            check if last element in out of screen then 
                                                        if need
                                                            copy last column to temp_column(int *)
                                                            shift all matrix 
        y :
            check if first element in out of screen then 
                                                        if need
                                                            copy last row to temp_row(int *)
                                                            shift all matrix 
            check if last element in out of screen then 
                                                        if need
                                                            copy last row to temp_row(int *)
                                                            shift all matrix 


/*documentation and intro
-readme
    conception
    how to use
    video of use (or animation)
    install/compile:
        -link to lib https://xcb.freedesktop.org/dist/
        -link to build lib https://xcb.freedesktop.org/DevelopersGuide/
        -compilation string